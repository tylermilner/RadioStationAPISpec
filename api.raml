#%RAML 1.0
title: Radio Station
version: v1
baseUri: http://api.samplehost.com

types:
  Show:
    properties:
      name: string
      description: string
      djId: string
      broadcastInfo:
        type: object
        properties:
          location: string
          dayOfWeek: string
          startTime: string
          endTime: string
      nextBroadcastTime: integer
      avatarUrl: string
      soundcloudUrl: string
    example:
      name: "The Greenroom"
      description: "A classically trained keyboardist and working musician based in Chicago, STUNNA (aka J. Cappo) has crafted his own unique sound within the fast paced world of Drum + Bass music"
      djId: "2"
      broadcastInfo:
        location: "Chicago, IL, USA"
        dayOfWeek: "Wednesday"
        startTime: "14:00"
        endTime: "17:00"
      nextBroadcastTime: 1490814000
      avatarUrl: "http://bassdrive.com/img/radio_schedule_entries/image/original/stunnagreenroompromo1nufinalhalf-74.jpg"
      soundcloudUrl: "https://soundcloud.com/stunna"
  DJ:
    properties:
      id: string
      handle: string
      firstName: string
      lastName: string
      showId: string
    example:
      id: "1"
      handle: "Overfiend"
      firstName: "Louis"
      lastName: "Overfiend"
      showId: "1"

traits:
  Secured:
    headers:
      Authorization:
        description: Authorization bearer header must contain the user session token.
        example: Bearer aaaa.bbbb.cccc
    responses:
      401:
        description: Indicates that the user session token is no longer valid. A new token should be obtained by logging in again.

resourceTypes:
  Collection:
    get:
      responses:
        200:
          body:
            application/json:
              type: <<item>>[]
    post:
      is: [Secured]
      body:
        application/json:
          type: <<item>>

  Member:
    get:
      responses:
        200:
          body:
            application/json:
              type: <<item>>
    put:
      is: [Secured]
      body:
        application/json:
          type: <<item>>
    delete:
      is: [Secured]
      responses:
        204:

/config:
  get:

/login:
  post:

/nowPlaying:
  get:
  put:

/shows:
  type: { Collection: { item : Show } }

  /{id}:
    type: { Member: { item : Show } }

/djs:
  type: { Collection: { item : DJ } }

  /{id}:
    type: { Member: { item : DJ } }
